#!/bin/python3
import time
import sys
import os

if os.name == "nt":
    # import msvcrt
    import ctypes

    class _CursorInfo(ctypes.Structure):
        _fields_ = [("size", ctypes.c_int), ("visible", ctypes.c_byte)]


def hide_cursor():
    if os.name == "nt":
        ci = _CursorInfo()
        handle = ctypes.windll.kernel32.GetStdHandle(-11)
        ctypes.windll.kernel32.GetConsoleCursorInfo(handle, ctypes.byref(ci))
        ci.visible = False
        ctypes.windll.kernel32.SetConsoleCursorInfo(handle, ctypes.byref(ci))
    elif os.name == "posix":
        sys.stdout.write("\033[?25l")
        sys.stdout.flush()


def show_cursor():
    if os.name == "nt":
        ci = _CursorInfo()
        handle = ctypes.windll.kernel32.GetStdHandle(-11)
        ctypes.windll.kernel32.GetConsoleCursorInfo(handle, ctypes.byref(ci))
        ci.visible = True
        ctypes.windll.kernel32.SetConsoleCursorInfo(handle, ctypes.byref(ci))
    elif os.name == "posix":
        sys.stdout.write("\033[?25h")
        sys.stdout.flush()


asc_colors = {
    "default": "\u001b[m",
    "black": "\u001b[30m",
    "red": "\u001b[31m",
    "green": "\u001b[32m",
    "yellow": "\u001b[33m",
    "blue": "\u001b[34m",
    "magenta": "\u001b[35m",
    "cyan": "\u001b[36m",
    "grey": "\u001b[37m",
    "blackBg": "\033[37;40m",
    "redBg": "\033[37;41m",
    "greenBg": "\033[30;42m",
    "yellowBg": "\033[37;43m",
    "blueBg": "\033[30;44m",
    "magentaBg": "\033[30;45m",
    "cyanBg": "\033[30;46m",
    "defBg": "\033[37;m",
}


def circularDecor(icon, text, color):
    return f"{asc_colors[f'{color}']}{asc_colors[f'{color}Bg']}\033[1m{icon}{text}\033[0m{asc_colors['defBg']}{asc_colors[f'{color}']} "


min = 45
breakMin = 20
noOfRounds = 4
if len(sys.argv) > 1:
    if sys.argv[1] == "e":
        print("")
        min = int(
            input(
                f"{asc_colors['default']}  {asc_colors['green']}Pomodoro Minutes: {asc_colors['black']}"
            )
        )
        print(" " * 25, end="\r")
        breakMin = int(
            input(
                f"{asc_colors['default']}  {asc_colors['green']}Break Minutes: {asc_colors['black']}"
            )
        )
        print(" " * 25, end="\r")
        noOfRounds = int(
            input(
                f"{asc_colors['default']}  {asc_colors['green']}No of sessions: {asc_colors['black']}"
            )
        )
        print(" " * 25, end="\r")


count = 0


def wait(breakOrNot, t, round):
    while t:
        mins, secs = divmod(t, 60)
        timer = "{:02d}:{:02d}".format(mins, secs)
        if breakOrNot:
            print(
                " ",
                circularDecor(" ", timer, "black"),
                f"{asc_colors['black']} Round: {asc_colors['default']}",
                circularDecor("  ", f"{round} : Break", "black"),
                end="\r",
            )
        else:
            print(
                " ",
                circularDecor(" ", timer, "magenta"),
                f"{asc_colors['black']} Round: {asc_colors['default']}",
                circularDecor("  ", f"{round} : Work", "magenta"),
                end="\r",
            )
        time.sleep(1)
        t -= 1


if __name__ == "__main__":
    try:
        hide_cursor()
        while True:
            # os.system("mpv --no-terminal ~/Music/assets/mixkit-fairy-bells-583.wav &")
            os.system(
                "mpv --no-terminal ~/Music/assets/mixkit-alert-bells-echo-765.wav &"
            )
            wait(False, min * 60, count)
            print("   " * 25, end="\r")
            count += 1
            os.system(
                "mpv --no-terminal ~/Music/assets/mixkit-alert-bells-echo-765.wav &"
            )
            print("\t", circularDecor(f" ", "Break Started!", "cyan"), end="\r")
            os.system(
                "mpv --no-terminal ~/Music/assets/mixkit-alert-bells-echo-765.wav &"
            )
            time.sleep(1)
            print("   " * 25, end="\r")
            wait(True, breakMin * 60, count)
            print("   " * 25, end="\r")
            os.system(
                "mpv --no-terminal ~/Music/assets/mixkit-alert-bells-echo-765.wav &"
            )
            print(
                "\t",
                circularDecor(f"  {count} ", "Session Started!", "cyan"),
                end="\r",
            )
            time.sleep(1)
            print("   " * 25, end="\r")
            if count >= 4:
                break
        show_cursor()
    except KeyboardInterrupt:
        print("   " * 25, end="\r")
        print("\t", circularDecor(f"  {count} ", "Session Stopped!", "cyan"))
        show_cursor()

        try:
            sys.exit(130)
        except SystemExit:
            os._exit(130)
